cmake_minimum_required(VERSION 3.0)

project(Miscellaneous)

message("CMAKE_BUILD_TYPE = ${CMAKE_BUILD_TYPE}")

IF(CMAKE_BUILD_TYPE MATCHES Debug)
  message("Debug build.")
ELSEIF(CMAKE_BUILD_TYPE MATCHES Release)
  message("Release build.")
ELSE()
  CMAKE_BUILD_TYPE = Release
  message("Some other build type.")
ENDIF()

add_definitions(-g -std=c++14)
set(CMAKE_CXX_FLAGS "${CMAXE_CXX_FLAGS} -Wall")

# include
include_directories( ./include )

set(sources
   	main.cpp 
	./src/Algorithms.cpp
	./src/Async.cpp
	./src/ConditionVariable.cpp
	./src/Graph.cpp
	./src/MoveMyData.cpp
	./src/OpenClosedPrinciple.cpp
	./src/Student.cpp
	./src/ThreadSafeQueue.cpp
	./src/AssociativeContainer.cpp
	./src/BinarySearchTree.cpp
	./src/Graph2.cpp
	./src/MathFuncs.cpp
	./src/MoveSemantics.cpp
	./src/StringsRegEx.cpp
	./src/TemplateGrid.cpp
	./src/ThreadWrapper.cpp)

add_executable(Misc ${sources})

# building directly without a static lib
target_link_libraries(Misc pthread)
